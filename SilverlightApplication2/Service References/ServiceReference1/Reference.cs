//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace SilverlightApplication2.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuakeMessage", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class QuakeMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool DeleteMeField;
        
        private double DepthField;
        
        private double DipField;
        
        private string EventIDField;
        
        private string FaultTypeField;
        
        private string FlagField;
        
        private double LatField;
        
        private double LatCalcField;
        
        private double LatCalc2Field;
        
        private double LatCwField;
        
        private double LatCw2Field;
        
        private double LengthField;
        
        private double LonField;
        
        private double LonCalcField;
        
        private double LonCalc2Field;
        
        private double LonCwField;
        
        private double LonCw2Field;
        
        private double MagnitudeField;
        
        private SilverlightApplication2.ServiceReference1.StationsInfo StationField;
        
        private string StationCodeField;
        
        private string StationsGroupField;
        
        private double StressField;
        
        private double StrikeField;
        
        private double TopDepthField;
        
        private double WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteMe {
            get {
                return this.DeleteMeField;
            }
            set {
                if ((this.DeleteMeField.Equals(value) != true)) {
                    this.DeleteMeField = value;
                    this.RaisePropertyChanged("DeleteMe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Depth {
            get {
                return this.DepthField;
            }
            set {
                if ((this.DepthField.Equals(value) != true)) {
                    this.DepthField = value;
                    this.RaisePropertyChanged("Depth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Dip {
            get {
                return this.DipField;
            }
            set {
                if ((this.DipField.Equals(value) != true)) {
                    this.DipField = value;
                    this.RaisePropertyChanged("Dip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIDField, value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultType {
            get {
                return this.FaultTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultTypeField, value) != true)) {
                    this.FaultTypeField = value;
                    this.RaisePropertyChanged("FaultType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatCalc {
            get {
                return this.LatCalcField;
            }
            set {
                if ((this.LatCalcField.Equals(value) != true)) {
                    this.LatCalcField = value;
                    this.RaisePropertyChanged("LatCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatCalc2 {
            get {
                return this.LatCalc2Field;
            }
            set {
                if ((this.LatCalc2Field.Equals(value) != true)) {
                    this.LatCalc2Field = value;
                    this.RaisePropertyChanged("LatCalc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatCw {
            get {
                return this.LatCwField;
            }
            set {
                if ((this.LatCwField.Equals(value) != true)) {
                    this.LatCwField = value;
                    this.RaisePropertyChanged("LatCw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatCw2 {
            get {
                return this.LatCw2Field;
            }
            set {
                if ((this.LatCw2Field.Equals(value) != true)) {
                    this.LatCw2Field = value;
                    this.RaisePropertyChanged("LatCw2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon {
            get {
                return this.LonField;
            }
            set {
                if ((this.LonField.Equals(value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LonCalc {
            get {
                return this.LonCalcField;
            }
            set {
                if ((this.LonCalcField.Equals(value) != true)) {
                    this.LonCalcField = value;
                    this.RaisePropertyChanged("LonCalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LonCalc2 {
            get {
                return this.LonCalc2Field;
            }
            set {
                if ((this.LonCalc2Field.Equals(value) != true)) {
                    this.LonCalc2Field = value;
                    this.RaisePropertyChanged("LonCalc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LonCw {
            get {
                return this.LonCwField;
            }
            set {
                if ((this.LonCwField.Equals(value) != true)) {
                    this.LonCwField = value;
                    this.RaisePropertyChanged("LonCw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LonCw2 {
            get {
                return this.LonCw2Field;
            }
            set {
                if ((this.LonCw2Field.Equals(value) != true)) {
                    this.LonCw2Field = value;
                    this.RaisePropertyChanged("LonCw2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Magnitude {
            get {
                return this.MagnitudeField;
            }
            set {
                if ((this.MagnitudeField.Equals(value) != true)) {
                    this.MagnitudeField = value;
                    this.RaisePropertyChanged("Magnitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SilverlightApplication2.ServiceReference1.StationsInfo Station {
            get {
                return this.StationField;
            }
            set {
                if ((object.ReferenceEquals(this.StationField, value) != true)) {
                    this.StationField = value;
                    this.RaisePropertyChanged("Station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationsGroup {
            get {
                return this.StationsGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.StationsGroupField, value) != true)) {
                    this.StationsGroupField = value;
                    this.RaisePropertyChanged("StationsGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Stress {
            get {
                return this.StressField;
            }
            set {
                if ((this.StressField.Equals(value) != true)) {
                    this.StressField = value;
                    this.RaisePropertyChanged("Stress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Strike {
            get {
                return this.StrikeField;
            }
            set {
                if ((this.StrikeField.Equals(value) != true)) {
                    this.StrikeField = value;
                    this.RaisePropertyChanged("Strike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TopDepth {
            get {
                return this.TopDepthField;
            }
            set {
                if ((this.TopDepthField.Equals(value) != true)) {
                    this.TopDepthField = value;
                    this.RaisePropertyChanged("TopDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationsInfo", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class StationsInfo : SilverlightApplication2.ServiceReference1.TableServiceEntity {
        
        private string CodeField;
        
        private string CrustalAmplificationField;
        
        private double ElevationField;
        
        private double KappaCoeffientField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private string SiteAmplificationField;
        
        private string SoilConditionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrustalAmplification {
            get {
                return this.CrustalAmplificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CrustalAmplificationField, value) != true)) {
                    this.CrustalAmplificationField = value;
                    this.RaisePropertyChanged("CrustalAmplification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Elevation {
            get {
                return this.ElevationField;
            }
            set {
                if ((this.ElevationField.Equals(value) != true)) {
                    this.ElevationField = value;
                    this.RaisePropertyChanged("Elevation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double KappaCoeffient {
            get {
                return this.KappaCoeffientField;
            }
            set {
                if ((this.KappaCoeffientField.Equals(value) != true)) {
                    this.KappaCoeffientField = value;
                    this.RaisePropertyChanged("KappaCoeffient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteAmplification {
            get {
                return this.SiteAmplificationField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteAmplificationField, value) != true)) {
                    this.SiteAmplificationField = value;
                    this.RaisePropertyChanged("SiteAmplification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoilCondition {
            get {
                return this.SoilConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.SoilConditionField, value) != true)) {
                    this.SoilConditionField = value;
                    this.RaisePropertyChanged("SoilCondition");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableServiceEntity", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.WindowsAzure.StorageClient")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SilverlightApplication2.ServiceReference1.StationsInfo))]
    public partial class TableServiceEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PartitionKeyField;
        
        private string RowKeyField;
        
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowKey {
            get {
                return this.RowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RowKeyField, value) != true)) {
                    this.RowKeyField = value;
                    this.RaisePropertyChanged("RowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAzureStorage")]
    public interface IAzureStorage {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/AddMessage", ReplyAction="http://tempuri.org/IAzureStorage/AddMessageResponse")]
        System.IAsyncResult BeginAddMessage(SilverlightApplication2.ServiceReference1.QuakeMessage data, System.AsyncCallback callback, object asyncState);
        
        bool EndAddMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/GetStationsGroups", ReplyAction="http://tempuri.org/IAzureStorage/GetStationsGroupsResponse")]
        System.IAsyncResult BeginGetStationsGroups(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetStationsGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/GetStations", ReplyAction="http://tempuri.org/IAzureStorage/GetStationsResponse")]
        System.IAsyncResult BeginGetStations(string PartitionKey, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> EndGetStations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/GetResults", ReplyAction="http://tempuri.org/IAzureStorage/GetResultsResponse")]
        System.IAsyncResult BeginGetResults(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/CreateGrid", ReplyAction="http://tempuri.org/IAzureStorage/CreateGridResponse")]
        System.IAsyncResult BeginCreateGrid(SilverlightApplication2.ServiceReference1.StationsInfo station, double MinLat, double MaxLat, double LatStep, double MinLon, double MaxLon, double LonStep, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateGrid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/UploadFile", ReplyAction="http://tempuri.org/IAzureStorage/UploadFileResponse")]
        System.IAsyncResult BeginUploadFile(string PartitionKey, string file, System.AsyncCallback callback, object asyncState);
        
        bool EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/CalculateGeometry", ReplyAction="http://tempuri.org/IAzureStorage/CalculateGeometryResponse")]
        System.IAsyncResult BeginCalculateGeometry(SilverlightApplication2.ServiceReference1.QuakeMessage q, System.AsyncCallback callback, object asyncState);
        
        SilverlightApplication2.ServiceReference1.QuakeMessage EndCalculateGeometry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAzureStorage/DeleteStation", ReplyAction="http://tempuri.org/IAzureStorage/DeleteStationResponse")]
        System.IAsyncResult BeginDeleteStation(string PartitionKey, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAzureStorageChannel : SilverlightApplication2.ServiceReference1.IAzureStorage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStationsGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStationsGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateGridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateGridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateGeometryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CalculateGeometryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverlightApplication2.ServiceReference1.QuakeMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverlightApplication2.ServiceReference1.QuakeMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AzureStorageClient : System.ServiceModel.ClientBase<SilverlightApplication2.ServiceReference1.IAzureStorage>, SilverlightApplication2.ServiceReference1.IAzureStorage {
        
        private BeginOperationDelegate onBeginAddMessageDelegate;
        
        private EndOperationDelegate onEndAddMessageDelegate;
        
        private System.Threading.SendOrPostCallback onAddMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStationsGroupsDelegate;
        
        private EndOperationDelegate onEndGetStationsGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStationsGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStationsDelegate;
        
        private EndOperationDelegate onEndGetStationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResultsDelegate;
        
        private EndOperationDelegate onEndGetResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateGridDelegate;
        
        private EndOperationDelegate onEndCreateGridDelegate;
        
        private System.Threading.SendOrPostCallback onCreateGridCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculateGeometryDelegate;
        
        private EndOperationDelegate onEndCalculateGeometryDelegate;
        
        private System.Threading.SendOrPostCallback onCalculateGeometryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStationDelegate;
        
        private EndOperationDelegate onEndDeleteStationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AzureStorageClient() {
        }
        
        public AzureStorageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AzureStorageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureStorageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureStorageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddMessageCompletedEventArgs> AddMessageCompleted;
        
        public event System.EventHandler<GetStationsGroupsCompletedEventArgs> GetStationsGroupsCompleted;
        
        public event System.EventHandler<GetStationsCompletedEventArgs> GetStationsCompleted;
        
        public event System.EventHandler<GetResultsCompletedEventArgs> GetResultsCompleted;
        
        public event System.EventHandler<CreateGridCompletedEventArgs> CreateGridCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<CalculateGeometryCompletedEventArgs> CalculateGeometryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginAddMessage(SilverlightApplication2.ServiceReference1.QuakeMessage data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddMessage(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightApplication2.ServiceReference1.IAzureStorage.EndAddMessage(System.IAsyncResult result) {
            return base.Channel.EndAddMessage(result);
        }
        
        private System.IAsyncResult OnBeginAddMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication2.ServiceReference1.QuakeMessage data = ((SilverlightApplication2.ServiceReference1.QuakeMessage)(inValues[0]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginAddMessage(data, callback, asyncState);
        }
        
        private object[] OnEndAddMessage(System.IAsyncResult result) {
            bool retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndAddMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddMessageCompleted(object state) {
            if ((this.AddMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddMessageCompleted(this, new AddMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddMessageAsync(SilverlightApplication2.ServiceReference1.QuakeMessage data) {
            this.AddMessageAsync(data, null);
        }
        
        public void AddMessageAsync(SilverlightApplication2.ServiceReference1.QuakeMessage data, object userState) {
            if ((this.onBeginAddMessageDelegate == null)) {
                this.onBeginAddMessageDelegate = new BeginOperationDelegate(this.OnBeginAddMessage);
            }
            if ((this.onEndAddMessageDelegate == null)) {
                this.onEndAddMessageDelegate = new EndOperationDelegate(this.OnEndAddMessage);
            }
            if ((this.onAddMessageCompletedDelegate == null)) {
                this.onAddMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddMessageCompleted);
            }
            base.InvokeAsync(this.onBeginAddMessageDelegate, new object[] {
                        data}, this.onEndAddMessageDelegate, this.onAddMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginGetStationsGroups(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStationsGroups(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> SilverlightApplication2.ServiceReference1.IAzureStorage.EndGetStationsGroups(System.IAsyncResult result) {
            return base.Channel.EndGetStationsGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetStationsGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginGetStationsGroups(callback, asyncState);
        }
        
        private object[] OnEndGetStationsGroups(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndGetStationsGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStationsGroupsCompleted(object state) {
            if ((this.GetStationsGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStationsGroupsCompleted(this, new GetStationsGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStationsGroupsAsync() {
            this.GetStationsGroupsAsync(null);
        }
        
        public void GetStationsGroupsAsync(object userState) {
            if ((this.onBeginGetStationsGroupsDelegate == null)) {
                this.onBeginGetStationsGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetStationsGroups);
            }
            if ((this.onEndGetStationsGroupsDelegate == null)) {
                this.onEndGetStationsGroupsDelegate = new EndOperationDelegate(this.OnEndGetStationsGroups);
            }
            if ((this.onGetStationsGroupsCompletedDelegate == null)) {
                this.onGetStationsGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStationsGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStationsGroupsDelegate, null, this.onEndGetStationsGroupsDelegate, this.onGetStationsGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginGetStations(string PartitionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStations(PartitionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> SilverlightApplication2.ServiceReference1.IAzureStorage.EndGetStations(System.IAsyncResult result) {
            return base.Channel.EndGetStations(result);
        }
        
        private System.IAsyncResult OnBeginGetStations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PartitionKey = ((string)(inValues[0]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginGetStations(PartitionKey, callback, asyncState);
        }
        
        private object[] OnEndGetStations(System.IAsyncResult result) {
            System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndGetStations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStationsCompleted(object state) {
            if ((this.GetStationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStationsCompleted(this, new GetStationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStationsAsync(string PartitionKey) {
            this.GetStationsAsync(PartitionKey, null);
        }
        
        public void GetStationsAsync(string PartitionKey, object userState) {
            if ((this.onBeginGetStationsDelegate == null)) {
                this.onBeginGetStationsDelegate = new BeginOperationDelegate(this.OnBeginGetStations);
            }
            if ((this.onEndGetStationsDelegate == null)) {
                this.onEndGetStationsDelegate = new EndOperationDelegate(this.OnEndGetStations);
            }
            if ((this.onGetStationsCompletedDelegate == null)) {
                this.onGetStationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStationsDelegate, new object[] {
                        PartitionKey}, this.onEndGetStationsDelegate, this.onGetStationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginGetResults(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResults(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> SilverlightApplication2.ServiceReference1.IAzureStorage.EndGetResults(System.IAsyncResult result) {
            return base.Channel.EndGetResults(result);
        }
        
        private System.IAsyncResult OnBeginGetResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginGetResults(name, callback, asyncState);
        }
        
        private object[] OnEndGetResults(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndGetResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResultsCompleted(object state) {
            if ((this.GetResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResultsCompleted(this, new GetResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResultsAsync(string name) {
            this.GetResultsAsync(name, null);
        }
        
        public void GetResultsAsync(string name, object userState) {
            if ((this.onBeginGetResultsDelegate == null)) {
                this.onBeginGetResultsDelegate = new BeginOperationDelegate(this.OnBeginGetResults);
            }
            if ((this.onEndGetResultsDelegate == null)) {
                this.onEndGetResultsDelegate = new EndOperationDelegate(this.OnEndGetResults);
            }
            if ((this.onGetResultsCompletedDelegate == null)) {
                this.onGetResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetResultsDelegate, new object[] {
                        name}, this.onEndGetResultsDelegate, this.onGetResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginCreateGrid(SilverlightApplication2.ServiceReference1.StationsInfo station, double MinLat, double MaxLat, double LatStep, double MinLon, double MaxLon, double LonStep, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateGrid(station, MinLat, MaxLat, LatStep, MinLon, MaxLon, LonStep, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightApplication2.ServiceReference1.IAzureStorage.EndCreateGrid(System.IAsyncResult result) {
            return base.Channel.EndCreateGrid(result);
        }
        
        private System.IAsyncResult OnBeginCreateGrid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication2.ServiceReference1.StationsInfo station = ((SilverlightApplication2.ServiceReference1.StationsInfo)(inValues[0]));
            double MinLat = ((double)(inValues[1]));
            double MaxLat = ((double)(inValues[2]));
            double LatStep = ((double)(inValues[3]));
            double MinLon = ((double)(inValues[4]));
            double MaxLon = ((double)(inValues[5]));
            double LonStep = ((double)(inValues[6]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginCreateGrid(station, MinLat, MaxLat, LatStep, MinLon, MaxLon, LonStep, callback, asyncState);
        }
        
        private object[] OnEndCreateGrid(System.IAsyncResult result) {
            bool retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndCreateGrid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateGridCompleted(object state) {
            if ((this.CreateGridCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateGridCompleted(this, new CreateGridCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateGridAsync(SilverlightApplication2.ServiceReference1.StationsInfo station, double MinLat, double MaxLat, double LatStep, double MinLon, double MaxLon, double LonStep) {
            this.CreateGridAsync(station, MinLat, MaxLat, LatStep, MinLon, MaxLon, LonStep, null);
        }
        
        public void CreateGridAsync(SilverlightApplication2.ServiceReference1.StationsInfo station, double MinLat, double MaxLat, double LatStep, double MinLon, double MaxLon, double LonStep, object userState) {
            if ((this.onBeginCreateGridDelegate == null)) {
                this.onBeginCreateGridDelegate = new BeginOperationDelegate(this.OnBeginCreateGrid);
            }
            if ((this.onEndCreateGridDelegate == null)) {
                this.onEndCreateGridDelegate = new EndOperationDelegate(this.OnEndCreateGrid);
            }
            if ((this.onCreateGridCompletedDelegate == null)) {
                this.onCreateGridCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateGridCompleted);
            }
            base.InvokeAsync(this.onBeginCreateGridDelegate, new object[] {
                        station,
                        MinLat,
                        MaxLat,
                        LatStep,
                        MinLon,
                        MaxLon,
                        LonStep}, this.onEndCreateGridDelegate, this.onCreateGridCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginUploadFile(string PartitionKey, string file, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(PartitionKey, file, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SilverlightApplication2.ServiceReference1.IAzureStorage.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PartitionKey = ((string)(inValues[0]));
            string file = ((string)(inValues[1]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginUploadFile(PartitionKey, file, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            bool retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(string PartitionKey, string file) {
            this.UploadFileAsync(PartitionKey, file, null);
        }
        
        public void UploadFileAsync(string PartitionKey, string file, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        PartitionKey,
                        file}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginCalculateGeometry(SilverlightApplication2.ServiceReference1.QuakeMessage q, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculateGeometry(q, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverlightApplication2.ServiceReference1.QuakeMessage SilverlightApplication2.ServiceReference1.IAzureStorage.EndCalculateGeometry(System.IAsyncResult result) {
            return base.Channel.EndCalculateGeometry(result);
        }
        
        private System.IAsyncResult OnBeginCalculateGeometry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication2.ServiceReference1.QuakeMessage q = ((SilverlightApplication2.ServiceReference1.QuakeMessage)(inValues[0]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginCalculateGeometry(q, callback, asyncState);
        }
        
        private object[] OnEndCalculateGeometry(System.IAsyncResult result) {
            SilverlightApplication2.ServiceReference1.QuakeMessage retVal = ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndCalculateGeometry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCalculateGeometryCompleted(object state) {
            if ((this.CalculateGeometryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculateGeometryCompleted(this, new CalculateGeometryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculateGeometryAsync(SilverlightApplication2.ServiceReference1.QuakeMessage q) {
            this.CalculateGeometryAsync(q, null);
        }
        
        public void CalculateGeometryAsync(SilverlightApplication2.ServiceReference1.QuakeMessage q, object userState) {
            if ((this.onBeginCalculateGeometryDelegate == null)) {
                this.onBeginCalculateGeometryDelegate = new BeginOperationDelegate(this.OnBeginCalculateGeometry);
            }
            if ((this.onEndCalculateGeometryDelegate == null)) {
                this.onEndCalculateGeometryDelegate = new EndOperationDelegate(this.OnEndCalculateGeometry);
            }
            if ((this.onCalculateGeometryCompletedDelegate == null)) {
                this.onCalculateGeometryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculateGeometryCompleted);
            }
            base.InvokeAsync(this.onBeginCalculateGeometryDelegate, new object[] {
                        q}, this.onEndCalculateGeometryDelegate, this.onCalculateGeometryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverlightApplication2.ServiceReference1.IAzureStorage.BeginDeleteStation(string PartitionKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStation(PartitionKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SilverlightApplication2.ServiceReference1.IAzureStorage.EndDeleteStation(System.IAsyncResult result) {
            base.Channel.EndDeleteStation(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string PartitionKey = ((string)(inValues[0]));
            return ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).BeginDeleteStation(PartitionKey, callback, asyncState);
        }
        
        private object[] OnEndDeleteStation(System.IAsyncResult result) {
            ((SilverlightApplication2.ServiceReference1.IAzureStorage)(this)).EndDeleteStation(result);
            return null;
        }
        
        private void OnDeleteStationCompleted(object state) {
            if ((this.DeleteStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStationAsync(string PartitionKey) {
            this.DeleteStationAsync(PartitionKey, null);
        }
        
        public void DeleteStationAsync(string PartitionKey, object userState) {
            if ((this.onBeginDeleteStationDelegate == null)) {
                this.onBeginDeleteStationDelegate = new BeginOperationDelegate(this.OnBeginDeleteStation);
            }
            if ((this.onEndDeleteStationDelegate == null)) {
                this.onEndDeleteStationDelegate = new EndOperationDelegate(this.OnEndDeleteStation);
            }
            if ((this.onDeleteStationCompletedDelegate == null)) {
                this.onDeleteStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStationDelegate, new object[] {
                        PartitionKey}, this.onEndDeleteStationDelegate, this.onDeleteStationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication2.ServiceReference1.IAzureStorage CreateChannel() {
            return new AzureStorageClientChannel(this);
        }
        
        private class AzureStorageClientChannel : ChannelBase<SilverlightApplication2.ServiceReference1.IAzureStorage>, SilverlightApplication2.ServiceReference1.IAzureStorage {
            
            public AzureStorageClientChannel(System.ServiceModel.ClientBase<SilverlightApplication2.ServiceReference1.IAzureStorage> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddMessage(SilverlightApplication2.ServiceReference1.QuakeMessage data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("AddMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStationsGroups(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStationsGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetStationsGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetStationsGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStations(string PartitionKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PartitionKey;
                System.IAsyncResult _result = base.BeginInvoke("GetStations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> EndGetStations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo> _result = ((System.Collections.Generic.List<SilverlightApplication2.ServiceReference1.StationsInfo>)(base.EndInvoke("GetStations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetResults(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetResults", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateGrid(SilverlightApplication2.ServiceReference1.StationsInfo station, double MinLat, double MaxLat, double LatStep, double MinLon, double MaxLon, double LonStep, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = station;
                _args[1] = MinLat;
                _args[2] = MaxLat;
                _args[3] = LatStep;
                _args[4] = MinLon;
                _args[5] = MaxLon;
                _args[6] = LonStep;
                System.IAsyncResult _result = base.BeginInvoke("CreateGrid", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateGrid(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateGrid", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(string PartitionKey, string file, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = PartitionKey;
                _args[1] = file;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCalculateGeometry(SilverlightApplication2.ServiceReference1.QuakeMessage q, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = q;
                System.IAsyncResult _result = base.BeginInvoke("CalculateGeometry", _args, callback, asyncState);
                return _result;
            }
            
            public SilverlightApplication2.ServiceReference1.QuakeMessage EndCalculateGeometry(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverlightApplication2.ServiceReference1.QuakeMessage _result = ((SilverlightApplication2.ServiceReference1.QuakeMessage)(base.EndInvoke("CalculateGeometry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteStation(string PartitionKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PartitionKey;
                System.IAsyncResult _result = base.BeginInvoke("DeleteStation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteStation", _args, result);
            }
        }
    }
}
